* {
    font-family: 'Montserrat', sans-serif;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
background-image: Url(Images/IQ_Background_Notes.png);
background-size: cover;
}

/*Here is the code for the header. Decided to start off with it.*/

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: #333;
    color: #fff;
    padding: 10px 20px;
}

.logo img {
    height: 50px;
}

nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex;
}

nav ul li {
    padding: 0 15px;
}

nav ul li a {
    color: white;
    text-decoration: none;
    font-weight: bold;
}

nav ul li a:hover {
    color: #ccc;
}

.menu-toggle {
    display: none;
    flex-direction: column;
    cursor: pointer;
}

.menu-toggle .bar {
    background-color: #fff;
    height: 3px;
    width: 25px;
    margin: 3px 0;
    transition: 0.3s;
}

/*Now the actual main code*/

/* This is a neat little trick. Essentially, what's being done, is since all 3 of the divs share the "contact" as a common class between them, and since the contact class is within the box div, I can essentially use grid-area to specify the areas within the box where these 3 seperate divs will be. Basically dividing up the box and allocating each div in it's own little locked up location */

.form{
    grid-area: form;
    }

    
.info{
grid-area: info;
        }

 .map{
grid-area: map;
    }
.contact{
padding: 40px;
background: #fff;
}
            
.box{
position: relative;
display: grid;
grid-template-columns: 2fr 1fr;
grid-template-rows: 5fr 4fr;
grid-template-areas:
"form info"
"form map";
grid-gap: 20px;
}

.contact h3{
font-weight: bold;
font-size: 1.4em;
margin-bottom: 10px;
}

/* Now for the CSS relating to the Information lines for sending a message, or simply put, the info box */

.formBox{
position: relative;
width: 100%;
}

.formBox .row50{
display: flex;
gap: 20px;
}

.inputBox{
display: flex;
flex-direction: column; /* I don't even know how this fixed the design but it did */
margin-bottom: 10px;
width: 50%;
}

.formBox .row100 .inputBox{
width: 100%;
}

.inputBox span{
color: #000000;
margin-top: 10px;
margin-bottom: 5px;
font-weight: bold;
}

.inputBox input{
padding: 10px;
font-size: 1.1en;
outline: none;
border: 1px solid #000000;
}

.inputBox textarea{
padding: 15px;
font-size: 1.3en;
outline: none;
border: 1px solid #000000;
resize: none;  /* Remove this and you'll notice the box, as textareas conventionally are, is adjustable in size by the user. Needed to eliminate that */
min-height: 180px;
}

.inputBox input[type="submit"]
{
max-width: 120px;
font-weight: bold;
border: none;
cursor: pointer;
padding: 14px 15px;
}

.inputBox ::placeholder{
color: #716b6b;
}


/* Media Query for Screens 440px and below - as of now just for the burger-menu*/
@media (max-width: 440px) {
    .menu-toggle {
        display: flex;
    }

    nav ul {
        flex-direction: column;
        width: 100%;
        display: none;
    }

    nav ul.active {
        display: flex;
    }

    nav ul li {
        text-align: center;
        padding: 10px;
    }
}
